@page "/specializzazioni/crea"
@using Microsoft.EntityFrameworkCore
@using RegistroScolastico.Models
@using RegistroScolastico.Data
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Aggiungi Specializzazione</PageTitle>

<div class="aggiungi-specializzazione-mainbox animate-fadein">
    <div class="aggiungi-specializzazione-header">
        <h2>
            <i class="fas fa-graduation-cap me-2"></i>
            Nuova Specializzazione
        </h2>
    </div>

    <EditForm Model="@Specializzazione" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="glass-card p-4 mt-3">
            <div class="mb-4">
                <label for="nome" class="form-label fw-semibold text-primary">
                    <i class="fas fa-graduation-cap me-1"></i> Nome Specializzazione
                </label>
                <InputText id="nome" class="form-control glass-input" @bind-Value="Specializzazione.Nome" maxlength="100" autocomplete="off" />
                <ValidationMessage For="@(() => Specializzazione.Nome)" />
            </div>

            @if (!string.IsNullOrEmpty(statusMessage))
            {
                <div class="alert @(isError ? "alert-danger" : "alert-success") glass-card animate-fadein mt-3">
                    @statusMessage
                </div>
            }

            <div class="d-flex justify-content-end gap-2 mt-4">
                <button type="button" class="btn btn-secondary glass-btn" @onclick="GoBack">
                    <i class="fas fa-arrow-left"></i> Annulla
                </button>
                <button type="submit" class="btn btn-primary glass-btn">
                    <i class="fas fa-save"></i> Salva
                </button>
            </div>
        </div>
    </EditForm>
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />

@code {
    private Corso Specializzazione { get; set; } = new Corso();
    private string statusMessage = string.Empty;
    private bool isError = false;

    private async Task HandleValidSubmit()
    {
        statusMessage = string.Empty;
        isError = false;

        try
        {
            // Verifica duplicati
            var exists = await DbContext.Corsi.AnyAsync(c => c.Nome == Specializzazione.Nome);
            if (exists)
            {
                statusMessage = "Esiste già una specializzazione con questo nome.";
                isError = true;
                return;
            }

            DbContext.Corsi.Add(Specializzazione);
            await DbContext.SaveChangesAsync();
            statusMessage = "Specializzazione aggiunta con successo!";
            isError = false;
            await Task.Delay(900);
            NavigationManager.NavigateTo("/gestione");
        }
        catch (Exception ex)
        {
            statusMessage = $"Errore durante il salvataggio: {ex.Message}";
            isError = true;
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/gestione");
    }
}